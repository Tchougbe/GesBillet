// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Gestions_des_Titres_de_Transport.OrdreDeMissionDBModelsEF;

public partial class OrdreDeMissionContext : DbContext
{
    public OrdreDeMissionContext(DbContextOptions<OrdreDeMissionContext> options)
        : base(options)
    {
    }

	public virtual DbSet<FicheDeMission> FicheDeMission { get; set; }

	public virtual DbSet<FicheDeMissionR> FicheDeMissionR { get; set; }

    public virtual DbSet<Routing1> Routing1 { get; set; }

    public virtual DbSet<Routing2> Routing2 { get; set; }

    public virtual DbSet<Routing3> Routing3 { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
		modelBuilder.Entity<FicheDeMission>(entity =>
		{
			entity
				.HasNoKey()
				.ToTable("FicheDeMission", "dbo", tb =>
				{
					tb.HasTrigger("INSERTETAPE");
					tb.HasTrigger("MAJ_DECOMPTE");
					tb.HasTrigger("MAJ_ETAPE");
					tb.HasTrigger("MAJ_TRAJET");
				});

			entity.Property(e => e.Autoriserchevauchement).HasColumnName("AUTORISERCHEVAUCHEMENT");
			entity.Property(e => e.AutreImputation)
				.HasMaxLength(250)
				.IsFixedLength()
				.HasColumnName("Autre imputation");
			entity.Property(e => e.Budget)
				.HasDefaultValueSql("((0))")
				.HasColumnName("BUDGET");
			entity.Property(e => e.CatégorieAppliquée)
				.HasMaxLength(5)
				.IsFixedLength()
				.HasColumnName("Catégorie Appliquée");
			entity.Property(e => e.CodeStrImputation)
				.HasMaxLength(10)
				.IsFixedLength();
			entity.Property(e => e.Codeprojet)
				.HasMaxLength(7)
				.IsUnicode(false)
				.HasComment("Code du projet")
				.HasColumnName("CODEPROJET");
			entity.Property(e => e.Consommer)
				.HasDefaultValueSql("((0))")
				.HasColumnName("CONSOMMER");
			entity.Property(e => e.DateAppOrdRec).HasColumnType("date");
			entity.Property(e => e.DateDepDec).HasColumnType("date");
			entity.Property(e => e.DateDébut)
				.HasColumnType("date")
				.HasColumnName("Date début");
			entity.Property(e => e.DateEnreg)
				.HasColumnType("date")
				.HasColumnName("Date Enreg");
			entity.Property(e => e.DateFin)
				.HasColumnType("date")
				.HasColumnName("Date fin");
			entity.Property(e => e.DateRecOrdRec).HasColumnType("date");
			entity.Property(e => e.DateRetMisPre).HasColumnType("date");
			entity.Property(e => e.DateRouting).HasColumnType("date");
			entity.Property(e => e.DateTransfCr)
				.HasColumnType("date")
				.HasColumnName("DateTransfCR");
			entity.Property(e => e.Disponible)
				.HasDefaultValueSql("((0))")
				.HasColumnName("DISPONIBLE");
			entity.Property(e => e.Etape).HasDefaultValueSql("((19))");
			entity.Property(e => e.Fichierdecompte).HasColumnName("FICHIERDECOMPTE");
			entity.Property(e => e.Frais)
				.HasMaxLength(3)
				.IsFixedLength();
			entity.Property(e => e.Idagent).HasColumnName("IDAgent");
			entity.Property(e => e.Idopérateur).HasColumnName("IDOpérateur");
			entity.Property(e => e.Idvalideur).HasColumnName("IDValideur");
			entity.Property(e => e.ImpressionDefinitive).HasColumnName("IMPRESSION_DEFINITIVE");
			entity.Property(e => e.ImputationBudgétaire)
				.HasMaxLength(20)
				.IsFixedLength()
				.HasColumnName("Imputation Budgétaire");
			entity.Property(e => e.Intituleprojet)
				.IsUnicode(false)
				.HasComment("Intitulé du projet")
				.HasColumnName("INTITULEPROJET");
			entity.Property(e => e.MissionDrh)
				.HasMaxLength(30)
				.IsFixedLength()
				.HasColumnName("MissionDRH");
			entity.Property(e => e.Numvoiture)
				.HasMaxLength(50)
				.HasColumnName("NUMVOITURE");
			entity.Property(e => e.Objet).IsUnicode(false);
			entity.Property(e => e.RefFiche)
				.HasMaxLength(40)
				.IsFixedLength();
			entity.Property(e => e.RoutingPvalider).HasColumnName("RoutingPValider");
			entity.Property(e => e.SignataireDecompte)
				.HasMaxLength(40)
				.IsFixedLength()
				.HasColumnName("SIGNATAIRE_DECOMPTE");
			entity.Property(e => e.SignataireDecompte2)
				.HasMaxLength(40)
				.IsFixedLength()
				.HasColumnName("SIGNATAIRE_DECOMPTE2");
			entity.Property(e => e.SignataireOm)
				.HasMaxLength(40)
				.IsFixedLength()
				.HasColumnName("SignataireOM");
			entity.Property(e => e.SignataireRetourMission)
				.HasMaxLength(40)
				.IsFixedLength()
				.HasColumnName("SIGNATAIRE_RETOUR_MISSION");
			entity.Property(e => e.Titreabregeprojet)
				.HasMaxLength(500)
				.IsUnicode(false)
				.HasComment("Intitulé abrégé du projet")
				.HasColumnName("TITREABREGEPROJET");
			entity.Property(e => e.TransportPerso)
				.HasMaxLength(3)
				.IsFixedLength();
			entity.Property(e => e.Villedepart)
				.HasMaxLength(50)
				.HasColumnName("VILLEDEPART");
		});

		modelBuilder.Entity<FicheDeMissionR>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("FicheDeMissionR", "dbo");

            entity.Property(e => e.AutreImputation)
                .HasMaxLength(250)
                .IsFixedLength()
                .HasColumnName("Autre imputation");
            entity.Property(e => e.CatégorieAppliquée)
                .HasMaxLength(5)
                .IsFixedLength()
                .HasColumnName("Catégorie Appliquée");
            entity.Property(e => e.Classe)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.CodeStr)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.DateDébut)
                .HasColumnType("datetime")
                .HasColumnName("Date début");
            entity.Property(e => e.DateEnreg)
                .HasColumnType("datetime")
                .HasColumnName("Date Enreg");
            entity.Property(e => e.DateFin)
                .HasColumnType("datetime")
                .HasColumnName("Date fin");
            entity.Property(e => e.DateRouting).HasColumnType("datetime");
            entity.Property(e => e.Frais)
                .HasMaxLength(3)
                .IsFixedLength();
            entity.Property(e => e.MissionDrh)
                .HasMaxLength(30)
                .IsFixedLength()
                .HasColumnName("MissionDRH");
            entity.Property(e => e.NomEtPrénoms)
                .HasMaxLength(60)
                .IsFixedLength()
                .HasColumnName("Nom et Prénoms");
            entity.Property(e => e.Objet)
                .HasMaxLength(255)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Opérateur)
                .HasMaxLength(60)
                .IsFixedLength();
            entity.Property(e => e.RefFiche)
                .HasMaxLength(40)
                .IsFixedLength();
            entity.Property(e => e.RoutingPvalider).HasColumnName("RoutingPValider");
            entity.Property(e => e.Valideur)
                .HasMaxLength(60)
                .IsFixedLength();
        });

        modelBuilder.Entity<Routing1>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Routing1", "dbo");

            entity.Property(e => e.DateDepart).HasColumnType("date");
            entity.Property(e => e.DateEn).HasColumnType("date");
            entity.Property(e => e.DateRetour).HasColumnType("date");
            entity.Property(e => e.DateValidation).HasColumnType("date");
            entity.Property(e => e.DateVisa).HasColumnType("date");
            entity.Property(e => e.Nature).HasMaxLength(60);
            entity.Property(e => e.Pvalider).HasColumnName("PValider");
            entity.Property(e => e.PvaliderParM).HasColumnName("PValiderParM");
            entity.Property(e => e.RefFiche).HasMaxLength(40);
            entity.Property(e => e.Routing).HasMaxLength(200);
        });

        modelBuilder.Entity<Routing2>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Routing2", "dbo");

            entity.Property(e => e.Au).HasColumnType("date");
            entity.Property(e => e.AuHeb).HasColumnType("date");
            entity.Property(e => e.Change).HasColumnType("decimal(18, 4)");
            entity.Property(e => e.Du).HasColumnType("date");
            entity.Property(e => e.DuHeb).HasColumnType("date");
            entity.Property(e => e.Hotel).HasMaxLength(60);
            entity.Property(e => e.Mthebergement).HasColumnName("MTHebergement");
            entity.Property(e => e.Mtindemnite).HasColumnName("MTIndemnite");
            entity.Property(e => e.Nligne).HasColumnName("NLigne");
            entity.Property(e => e.Pays).HasMaxLength(30);
            entity.Property(e => e.RefFiche)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Ville).HasMaxLength(50);
        });

        modelBuilder.Entity<Routing3>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Routing3", "dbo");

            entity.Property(e => e.Arrive).HasMaxLength(25);
            entity.Property(e => e.DateD).HasColumnType("date");
            entity.Property(e => e.Depart).HasMaxLength(25);
            entity.Property(e => e.DetailTransporteur).HasMaxLength(60);
            entity.Property(e => e.MoyenTransport).HasMaxLength(30);
            entity.Property(e => e.Nligne).HasColumnName("NLigne");
            entity.Property(e => e.PaysArrive).HasMaxLength(30);
            entity.Property(e => e.PaysDepart).HasMaxLength(30);
            entity.Property(e => e.RefFiche).HasMaxLength(40);
            entity.Property(e => e.Transporteur).HasMaxLength(70);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}